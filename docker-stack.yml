version: "3.7"
services:
  mcp-clinica:
    image: mcp-clinica-nas-nuvens:latest
    build:
      context: .
      dockerfile: Dockerfile
    
    volumes:
      - mcp_clinica_data:/app/data
    
    networks:
      - minha_rede
    
    environment:
      # Configurações da API da Clínica nas Nuvens
      - CLINICA_NAS_NUVENS_API_URL=${CLINICA_NAS_NUVENS_API_URL}
      - CLINICA_NAS_NUVENS_USERNAME=${CLINICA_NAS_NUVENS_USERNAME}
      - CLINICA_NAS_NUVENS_PASSWORD=${CLINICA_NAS_NUVENS_PASSWORD}
      - CLINICA_NAS_NUVENS_CID=${CLINICA_NAS_NUVENS_CID}
      
      # Configurações do servidor
      - PORT=3000
      - NODE_ENV=production
      - LOG_LEVEL=info
      
      # Configurações do banco de dados PostgreSQL
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_CONNECTION_URI=${DATABASE_CONNECTION_URI}
      
      # Configurações de webhook para n8n
      - WEBHOOK_ENABLED=${WEBHOOK_ENABLED:-true}
      - WEBHOOK_URL=${WEBHOOK_URL}
      
      # Integração com RabbitMQ (opcional)
      - RABBITMQ_ENABLED=${RABBITMQ_ENABLED:-false}
      - RABBITMQ_URI=${RABBITMQ_URI}
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
      - traefik.enable=1
      - traefik.http.routers.mcp-clinica.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.mcp-clinica.entrypoints=websecure
      - traefik.http.routers.mcp-clinica.priority=1
      - traefik.http.routers.mcp-clinica.tls.certresolver=letsencryptresolver
      - traefik.http.routers.mcp-clinica.service=mcp-clinica
      - traefik.http.services.mcp-clinica.loadbalancer.server.port=3000
      - traefik.http.services.mcp-clinica.loadbalancer.passHostHeader=true

volumes:
  mcp_clinica_data:
    external: true
    name: mcp_clinica_data

networks:
  minha_rede:
    external: true
    name: minha_rede
